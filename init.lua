-----------------------
-- Basic definitions --
-----------------------


-- Node def

minetest.register_node ("coltranium:stone_with_coltranium", {
	description = "Coltranium Ore",
	tiles = {"default_stone.png^coltranium_mineral_coltranium.png"},
	paramtype = "light",
	light_source = 5,
	groups = {cracky = 3},
	sounds = default_stone_sounds,
	drop = "coltranium:coltranium_lump"
	})


-- Ore def

--minetest.register_ore({
--	ore_type       = "blob",
--	ore            = "coltranium:stone_with_coltranium",
--	wherein        = "default:stone",
--	clust_scarcity = 16*16*16,
--	clust_num_ores = 2,
--	clust_size     = 3,
--	height_min     = -31000,
--	height_max     = -256,
--})


-- Lump def

minetest.register_craftitem ("coltranium:coltranium_lump", {
	description = "Coltranium lump",
	inventory_image = "coltranium_coltranium_lump.png"
	})


-- Ingot def

minetest.register_craftitem ("coltranium:coltranium_ingot", {
	descritpion = "Coltranium ingot",
	inventory_image = "coltranium_coltranium_ingot.png"
	})


-- Block def

minetest.register_node ("coltranium:coltranium_block", {
	description = "Coltranium block",
	tiles = {"coltranium_coltranium_block.png"},
	groups = {snappy = 1, bendy = 2, cracky = 1, melty = 2, level= 2},
	sounds = default.node_sound_metal_defaults(),
	})


-- Recipes def

minetest.register_craft ({
	type = "cooking",
	output = "coltranium:coltranium_ingot",
	recipe = "coltranium:coltranium_lump"
	})

minetest.register_craft ({
	output = "coltranium:coltranium_block",
	recipe = {
			{"coltranium:coltranium_ingot", "coltranium:coltranium_ingot", "coltranium:coltranium_ingot"},
			{"coltranium:coltranium_ingot", "coltranium:coltranium_ingot", "coltranium:coltranium_ingot"},
			{"coltranium:coltranium_ingot", "coltranium:coltranium_ingot", "coltranium:coltranium_ingot"}
		}
	})

minetest.register_craft ({
	type = "shapeless",
	output = "coltranium:coltranium_ingot 9",
	recipe = {"coltranium:coltranium_block"}
	})


-- Coltranium is generated by thi ABM

minetest.register_abm({
	label = "Steel corrugation",                -- Pas d'influence en jeu
	nodenames = {"default:stone_with_diamond"}, -- Nodes concernés par la transformation
	interval = 60,                              -- Durée de la transformation (en secondes)
	chance = 2,                                 -- Probabilité (1/x)
	catch_up = true,                            -- Pour corriger un bug…
	neighbors = {"group:lava"},                 -- Nodes dont le voisinage provoque la transformation
	action = function(pos, node, active_object_count, active_object_count_wider)         -- Action (pas forcément un remplacement de node…)
		minetest.set_node(pos, {name="coltranium:stone_with_coltranium"})
	end })


----------------------------------
-- Armor and shield definitions --
----------------------------------

armor:register_armor("coltranium:helmet_coltranium", {
		description = "Coltranium Helmet",
		inventory_image = "coltranium_inv_helmet_coltranium.png",
		--preview = "coltranium_helmet_coltranium_preview.png",
		groups = {armor_head=1, armor_heal=2, armor_use=1000,
			physics_speed=1.2, physics_gravity=1, physics_jump=1.2},
		armor_groups = {fleshy=10},
		damage_groups = {cracky=2, snappy=3, choppy=2, crumbly=1, level=2},
	})
